package com.identity.processing;

import static java.util.Map.entry;

import java.util.Map; 

public class NameMatchKeyRankMap {

	public static final Map<String, Integer> matchKeyRankMap = Map.ofEntries(
		    
		
    entry("YIIIYIYIIIIIII", 1),
    entry("NYIIYIYIIIIIII", 2),
    entry("NNIYYIYIIIIIII", 3),
    entry("NNYNYIYIIIIIII", 4),
    entry("YIIINYYIIIIIII", 5),
    entry("NYIINYYIIIIIII", 6),
    entry("NNIYNYYIIIIIII", 7),
    entry("NNYNNYYIIIIIII", 8),
    entry("YIIIYINYIIIIII", 9),
    entry("NYIIYINYIIIIII", 10),
    entry("NNIYYINYIIIIII", 11),
    entry("NNYNYINYIIIIII", 12),
    entry("YIIINYNYIIIIII", 13),
    entry("NYIINYNYIIIIII", 14),
    entry("NNIYNYNYIIIIII", 15),
    entry("NNYNNYNYIIIIII", 16),
    entry("YIIIIIYIIIIIII", 17),
    entry("YIIINNYIIIIIII", 18),
    entry("NYIIIIYIIIIIII", 19),
    entry("NYIINNYIIIIIII", 20),
    entry("NNIYIIYIIIIIII", 21),
    entry("NNIYNNYIIIIIII", 22),
    entry("NNYNIIYIIIIIII", 23),
    entry("NNYNNNYIIIIIII", 24),
    entry("YIIIIINYIIIIII", 25),
    entry("YIIINNNYIIIIII", 26),
    entry("NYIIIINYIIIIII", 27),
    entry("NYIINNNYIIIIII", 28),
    entry("NNIYIINYIIIIII", 29),
    entry("NNIYNNNYIIIIII", 30),
    entry("NNYNIINYIIIIII", 31),
    entry("NNYNNNNYIIIIII", 32),
    entry("NNNNYINNYYIIII", 33),
    entry("NNNNYINNNYYIII", 34),
    entry("NNNNYINNNYNIYI", 35),
    entry("NNNNYINNNYNYNI", 36),
    entry("NNNNNYNNYYIIII", 37),
    entry("NNNNNYNNNYYIII", 38),
    entry("NNNNNYNNNYNIYI", 39),
    entry("NNNNNYNNNYNYNI", 40),
    entry("NNNNYINNYNIIIY", 41),
    entry("NNNNYINNNNYIIY", 42),
    entry("NNNNYINNNNNIYY", 43),
    entry("NNNNYINNNNNYNY", 44),
    entry("NNNNNYNNYNIIIY", 45),
    entry("NNNNNYNNNNYIIY", 46),
    entry("NNNNNYNNNNNIYY", 47),
    entry("NNNNNYNNNNNYNY", 48),
    entry("NNNNIINNYYIIII", 49),
    entry("NNNNNNNNYYIIII", 50),
    entry("NNNNIINNNYYIII", 51),
    entry("NNNNNNNNNYYIII", 52),
    entry("NNNNIINNNYNIYI", 53),
    entry("NNNNNNNNNYNIYI", 54),
    entry("NNNNIINNNYNYNI", 55),
    entry("NNNNNNNNNYNYNI", 56),
    entry("NNNNIINNYNIIIY", 57),
    entry("NNNNNNNNYNIIIY", 58),
    entry("NNNNIINNNNYIIY", 59),
    entry("NNNNNNNNNNYIIY", 60),
    entry("NNNNIINNNNNIYY", 61),
    entry("NNNNNNNNNNNIYY", 62),
    entry("NNNNIINNNNNYNY", 63),
    entry("NNNNNNNNNNNYNY", 64),
    entry("NNNNYIYIIIIIII", 65),
    entry("NNNNNYYIIIIIII", 66),
    entry("NNNNYINYIIIIII", 67),
    entry("NNNNNYNYIIIIII", 68),
    entry("NNNNIIYIIIIIII", 69),
    entry("NNNNNNYIIIIIII", 70),
    entry("NNNNIINYIIIIII", 71),
    entry("NNNNNNNYIIIIII", 72),
    entry("YIIIYINNIIIIII", 73),
    entry("YIIINYNNIIIIII", 74),
    entry("NYIIYINNIIIIII", 75),
    entry("NYIINYNNIIIIII", 76),
    entry("NNIYYINNIIIIII", 77),
    entry("NNIYNYNNIIIIII", 78),
    entry("NNYNYINNIIIIII", 79),
    entry("NNYNNYNNIIIIII", 80),
    entry("YIIIIINNIIIIII", 81),
    entry("YIIINNNNIIIIII", 82),
    entry("NYIIIINNIIIIII", 83),
    entry("NYIINNNNIIIIII", 84),
    entry("NNIYIINNIIIIII", 85),
    entry("NNIYNNNNIIIIII", 86),
    entry("NNYNIINNIIIIII", 87),
    entry("NNYNNNNNIIIIII", 88),
    entry("NNNNIINNNYNNNI", 89),
    entry("NNNNNNNNNYNNNI", 90),
    entry("NNNNIINNNNNNNY", 91),
    entry("NNNNNNNNNNNNNY", 92),
    entry("NNNNIINNYNIIIN", 93),
    entry("NNNNNNNNYNIIIN", 94),
    entry("NNNNIINNNNYIIN", 95),
    entry("NNNNNNNNNNYIIN", 96),
    entry("NNNNIINNNNNIYN", 97),
    entry("NNNNNNNNNNNIYN", 98),
    entry("NNNNIINNNNNYNN", 99),
    entry("NNNNNNNNNNNYNN", 100)

	);
}
